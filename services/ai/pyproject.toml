[project]
name = "backend"
version = "0.3.2"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "google-adk>=0.2.0",
    "fastapi>=0.104.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.1", # Required for FastAPI TestClient
    "uvicorn[standard]>=0.27.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "loguru>=0.7.0",
    "ruff>=0.11.11",
    "google-cloud-discoveryengine",
    "gunicorn>=23.0.0",
    "pip>=25.2",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v -s --cov=src --cov-report=term-missing"
pythonpath = [".", "src"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src"]
branch = true
omit = ["src/__init__.py", "src/config.py", "tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
]
show_missing = true
fail_under = 65

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
select = ["E", "F", "I"]
exclude = [".git", "__pycache__", "build", "dist", ".venv", "uv.lock"]
target-version = "py313"
fix = true

[tool.ruff.lint]


[tool.ruff.format]
docstring-code-format = true
quote-style = "single"
skip-magic-trailing-comma = false
indent-style = "space"
